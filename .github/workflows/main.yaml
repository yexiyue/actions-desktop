name: test
on:
  push:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  build-binaries:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: stepup node
        uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: install pnpm
        run: |
          npm install -g pnpm
      - name: install dependencies
        run: pnpm i
      - uses: tauri-apps/tauri-action@v0
        id: tauri_build
      - name: echo
        run: echo "${{ fromJSON(steps.tauri_build.outputs.artifactPaths)[1] }}"
      - name: get file name
        id: file_name
        uses: actions/github-script@v7
        env:
          file_path: ${{ steps.tauri_build.outputs.artifactPaths }}
          app_version: ${{ steps.tauri_build.outputs.appVersion }}
          platform: ${{ matrix.platform }}
        with:
          script: |
            const path=require('path');
            const data=JSON.parse(process.env.file_path);
            let file_path=data[1];
            let fileName=path.parse(file_path);
            let platform='windows';
            if (process.env.platform.includes('macos')) {
              file_path=data[0];
              platform='macos';
              fileName=path.parse(file_path);
            }else if (process.env.platform.includes('ubuntu')) {
              file_path=data[0];
              fileName=path.parse(file_path);
              platform='linux';
            }
            return [file_path,`${fileName.name}_${platform}${process.env.app_version}${fileName.ext}`];
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ fromJSON(steps.file_name.outputs.result)[1] }}
          path: "${{ fromJSON(steps.file_name.outputs.result)[0] }}"
